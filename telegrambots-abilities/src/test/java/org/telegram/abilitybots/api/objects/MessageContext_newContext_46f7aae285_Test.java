// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.objects;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import org.telegram.abilitybots.api.bot.BaseAbilityBot;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.User;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class MessageContext_newContext_46f7aae285_Test {

    @Test
    public void testNewContextSuccess() {
        // Mocking the dependencies
        Update update = mock(Update.class);
        User user = mock(User.class);
        Long chatId = 123456L;
        BaseAbilityBot bot = mock(BaseAbilityBot.class);
        String[] arguments = {"Hello", "World"};

        // Call the method to test
        MessageContext result = MessageContext.newContext(update, user, chatId, bot, arguments);

        // Assert the results
        assertEquals(update, result.getUpdate());
        assertEquals(user, result.getUser());
        assertEquals(chatId, result.getChatId());
        assertEquals(bot, result.getBot());
        assertArrayEquals(arguments, result.getArguments());
    }

    @Test
    public void testNewContextWithNullArguments() {
        // Mocking the dependencies
        Update update = mock(Update.class);
        User user = mock(User.class);
        Long chatId = 123456L;
        BaseAbilityBot bot = mock(BaseAbilityBot.class);

        // Call the method to test
        MessageContext result = MessageContext.newContext(update, user, chatId, bot);

        // Assert the results
        assertEquals(update, result.getUpdate());
        assertEquals(user, result.getUser());
        assertEquals(chatId, result.getChatId());
        assertEquals(bot, result.getBot());
        assertNull(result.getArguments());
    }
}
