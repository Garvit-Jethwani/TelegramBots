// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.db;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.mapdb.Atomic;
import org.mapdb.DB;
import org.mapdb.DBMaker;
import org.mapdb.Serializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.telegram.abilitybots.api.util.Pair;
import java.io.IOException;
import java.util.*;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import org.junit.Before;
import org.junit.Test;

public class MapDBContext_getList_ac8dbf34e5_Test {

    private DB db;
    private MapDBContext mapDBContext;

    @Before
    public void setUp() {
        db = mock(DB.class);
        mapDBContext = new MapDBContext(db);
    }

    @Test
    public void testGetList_Success() {
        List<String> expected = Arrays.asList("Test1", "Test2");
        String name = "testList";

        when(db.<String>indexTreeList(name, Serializer.JAVA).createOrOpen()).thenReturn(expected);

        List<String> actual = mapDBContext.getList(name);
        assertEquals(expected, actual);
    }

    @Test(expected = ClassCastException.class)
    public void testGetList_Failure() {
        List<Integer> expected = Arrays.asList(1, 2);
        String name = "testList";

        when(db.<Integer>indexTreeList(name, Serializer.JAVA).createOrOpen()).thenReturn(expected);

        List<String> actual = mapDBContext.getList(name);
    }
}
