// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.db;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mapdb.DB;
import org.mapdb.DBMaker;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

public class MapDBContext_offlineInstance_303b1b6a31_Test {

    @Mock
    private DBMaker.Maker maker;

    @Mock
    private DB db;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        when(maker.fileDB(anyString())).thenReturn(maker);
        when(maker.fileMmapEnableIfSupported()).thenReturn(maker);
        when(maker.closeOnJvmShutdown()).thenReturn(maker);
        when(maker.transactionEnable()).thenReturn(maker);
        when(maker.fileDeleteAfterClose()).thenReturn(maker);
        when(maker.make()).thenReturn(db);
    }

    @Test
    public void testOfflineInstance_Success() {
        String name = "testDB";
        DBContext context = MapDBContext.offlineInstance(name);
        assertNotNull(context, "DBContext should not be null");
    }

    @Test
    public void testOfflineInstance_NullName() {
        String name = null;
        DBContext context = MapDBContext.offlineInstance(name);
        assertNotNull(context, "DBContext should not be null even if name is null");
    }

    @Test
    public void testOfflineInstance_EmptyName() {
        String name = "";
        DBContext context = MapDBContext.offlineInstance(name);
        assertNotNull(context, "DBContext should not be null even if name is empty");
    }
}
