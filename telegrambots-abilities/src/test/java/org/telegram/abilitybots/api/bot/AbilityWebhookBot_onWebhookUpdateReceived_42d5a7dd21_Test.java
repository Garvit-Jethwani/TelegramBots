// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.abilitybots.api.db.DBContext;
import org.telegram.abilitybots.api.toggle.AbilityToggle;
import org.telegram.abilitybots.api.toggle.DefaultToggle;
import org.telegram.telegrambots.bots.DefaultBotOptions;
import org.telegram.telegrambots.bots.TelegramWebhookBot;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.updates.SetWebhook;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.WebhookBot;
import org.telegram.telegrambots.util.WebhookUtils;

import static org.mockito.Mockito.*;

class AbilityWebhookBot_onWebhookUpdateReceived_42d5a7dd21_Test {

    @Mock
    private Update update;

    @Mock
    private TelegramWebhookBot telegramWebhookBot;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    void testOnWebhookUpdateReceivedSuccess() {
        doNothing().when(telegramWebhookBot).onUpdateReceived(update);
        BotApiMethod<?> result = telegramWebhookBot.onWebhookUpdateReceived(update);
        verify(telegramWebhookBot, times(1)).onUpdateReceived(update);
        assert result == null;
    }

    @Test
    void testOnWebhookUpdateReceivedFailure() {
        doThrow(TelegramApiException.class).when(telegramWebhookBot).onUpdateReceived(update);
        try {
            BotApiMethod<?> result = telegramWebhookBot.onWebhookUpdateReceived(update);
        } catch (TelegramApiException e) {
            assert true;
        }
    }
}
