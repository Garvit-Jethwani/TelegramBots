// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.abilitybots.api.objects.MessageContext;
import org.telegram.telegrambots.meta.api.objects.User;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.verify;

public class DefaultAbilities_getUserIdSendError_84a8b8c5fa_Test {

    @InjectMocks
    private DefaultAbilities defaultAbilities;

    @Mock
    private MessageContext ctx;

    @Mock
    private User user;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetUserIdSendError_UserExists() {
        when(user.getId()).thenReturn(12345L);
        when(defaultAbilities.getUser("username")).thenReturn(user);

        long userId = defaultAbilities.getUserIdSendError("username", ctx);

        assertEquals(12345L, userId);
    }

    @Test
    public void testGetUserIdSendError_UserNotFound() {
        when(defaultAbilities.getUser("username")).thenThrow(new IllegalStateException());

        assertThrows(IllegalStateException.class, () -> {
            defaultAbilities.getUserIdSendError("username", ctx);
        });

        verify(defaultAbilities).silent.send("User not found", ctx.chatId());
    }
}
