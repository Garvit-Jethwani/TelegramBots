// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.telegrambots.meta.api.objects.User;
import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.Mockito.when;

public class BaseAbilityBot_updateUserId_4623f66c42_Test {

    private BaseAbilityBot baseAbilityBot;

    @Mock
    private User oldUser;

    @Mock
    private User newUser;

    private Map<String, Integer> userIds;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        userIds = new HashMap<>();
        baseAbilityBot = new BaseAbilityBot() {
            @Override
            protected Map<String, Integer> userIds() {
                return userIds;
            }
        };
    }

    @Test
    public void testUpdateUserId_oldUserNotNull() {
        when(oldUser.getUserName()).thenReturn("oldUser");
        when(oldUser.getId()).thenReturn(1);
        userIds.put("oldUser", 1);

        when(newUser.getUserName()).thenReturn("newUser");
        when(newUser.getId()).thenReturn(2);

        baseAbilityBot.updateUserId(oldUser, newUser);

        assertNull(userIds.get("oldUser"));
        assertEquals(2, userIds.get("newUser"));
    }

    @Test
    public void testUpdateUserId_oldUserNull() {
        when(newUser.getUserName()).thenReturn("newUser");
        when(newUser.getId()).thenReturn(2);

        baseAbilityBot.updateUserId(null, newUser);

        assertEquals(2, userIds.get("newUser"));
    }
}
