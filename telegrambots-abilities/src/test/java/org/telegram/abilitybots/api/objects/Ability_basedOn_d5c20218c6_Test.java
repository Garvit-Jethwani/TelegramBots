// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.objects;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class Ability_basedOn_d5c20218c6_Test {

    @Mock
    private Ability ability;

    private AbilityBuilder abilityBuilder;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        abilityBuilder = new AbilityBuilder();
    }

    @Test
    public void testBasedOn_Success() {
        when(ability.name()).thenReturn("testName");
        when(ability.info()).thenReturn("testInfo");
        when(ability.tokens()).thenReturn(Arrays.asList("token1", "token2"));
        when(ability.locality()).thenReturn(Locality.ALL);
        when(ability.privacy()).thenReturn(Privacy.PUBLIC);
        when(ability.replies()).thenReturn(Arrays.asList(reply1, reply2));
        when(ability.action()).thenReturn(mockConsumer);
        when(ability.postAction()).thenReturn(mockBiConsumer);

        AbilityBuilder result = abilityBuilder.basedOn(ability);

        assertEquals("testName", result.name());
        assertEquals("testInfo", result.info());
        assertEquals(Arrays.asList("token1", "token2"), result.tokens());
        assertEquals(Locality.ALL, result.locality());
        assertEquals(Privacy.PUBLIC, result.privacy());
        assertEquals(Arrays.asList(reply1, reply2), result.replies());
        assertEquals(mockConsumer, result.action());
        assertEquals(mockBiConsumer, result.postAction());
    }

    @Test
    public void testBasedOn_NullAbility() {
        assertThrows(NullPointerException.class, () -> abilityBuilder.basedOn(null));
    }
}
