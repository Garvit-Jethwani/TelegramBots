// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.telegram.abilitybots.api.objects.MessageContext;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;

import java.util.Optional;

import static org.junit.Assert.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyLong;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultAbilities_sendMd_c9aea270f6_Test {

    @Mock
    private DefaultAbilities bot;

    @Mock
    private MessageContext ctx;

    @Mock
    private User user;

    private String message = "Test message";
    private String[] args = {"arg1", "arg2"};

    @Before
    public void setUp() {
        when(ctx.user()).thenReturn(user);
        when(user.getLanguageCode()).thenReturn("en");
        when(bot.silent.sendMd(any(String.class), anyLong())).thenReturn(Optional.of(new Message()));
    }

    @Test
    public void testSendMd_Success() {
        Optional<Message> result = bot.silent.sendMd(message, ctx, args);
        assertEquals(Optional.of(new Message()), result);
    }

    @Test
    public void testSendMd_Failure() {
        when(bot.silent.sendMd(any(String.class), anyLong())).thenReturn(Optional.empty());
        Optional<Message> result = bot.silent.sendMd(message, ctx, args);
        assertEquals(Optional.empty(), result);
    }
}
