// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.objects;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.telegrambots.meta.api.objects.Update;

import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class Ability_flags_8b0329d398_Test {

    @InjectMocks
    private Ability ability;

    @Mock
    private Update update;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        ability.setFlags(Arrays.asList(update -> true, update -> false));
    }

    @Test
    public void testFlagsSuccess() {
        List<Predicate<Update>> expectedFlags = Arrays.asList(update -> true, update -> false);
        List<Predicate<Update>> actualFlags = ability.flags();

        assertEquals(expectedFlags.size(), actualFlags.size());
        for (int i = 0; i < expectedFlags.size(); i++) {
            assertEquals(expectedFlags.get(i).test(update), actualFlags.get(i).test(update));
        }
    }

    @Test
    public void testFlagsFailure() {
        when(update.hasMessage()).thenReturn(false);

        List<Predicate<Update>> expectedFlags = Arrays.asList(update -> false, update -> false);
        List<Predicate<Update>> actualFlags = ability.flags();

        assertEquals(expectedFlags.size(), actualFlags.size());
        for (int i = 0; i < expectedFlags.size(); i++) {
            assertEquals(expectedFlags.get(i).test(update), actualFlags.get(i).test(update));
        }
    }
}
