// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.abilitybots.api.objects.Ability;
import org.telegram.abilitybots.api.objects.MessageContext;
import org.telegram.telegrambots.meta.api.objects.User;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

public class DefaultAbilities_reportCommands_a3dbb696b8_Test {

    @Mock
    private DefaultAbilities defaultAbilities;

    @Mock
    private MessageContext ctx;

    @Mock
    private User user;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testReportCommandsSuccess() {
        // TODO: Replace with valid data
        String expectedCommand = "command - info";

        when(defaultAbilities.reportCommands()).thenReturn(expectedCommand);
        when(ctx.user()).thenReturn(user);
        when(user.getLanguageCode()).thenReturn("en");
        
        Ability result = defaultAbilities.reportCommands();

        assertEquals(expectedCommand, result.info());
    }

    @Test
    public void testReportCommandsFailure() {
        // TODO: Replace with valid data
        String expectedCommand = "command - info";

        when(defaultAbilities.reportCommands()).thenReturn(null);
        when(ctx.user()).thenReturn(user);
        when(user.getLanguageCode()).thenReturn("en");

        Ability result = defaultAbilities.reportCommands();

        assertEquals(expectedCommand, result.info());
    }
}
