// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import java.util.regex.Pattern;
import static java.util.regex.Pattern.*;

public class BaseAbilityBot_stripBotUsername_bde0fec19f_Test {

    private BaseAbilityBot bot;

    @Mock
    private String botUsername;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        bot = new BaseAbilityBot() {
            @Override
            public String getBotUsername() {
                return botUsername;
            }

            @Override
            public String getBotToken() {
                return null;
            }
        };
    }

    @Test
    public void testStripBotUsername() {
        when(botUsername).thenReturn("testBot");
        String token = "@testBotHello";
        String expected = "Hello";
        String actual = bot.stripBotUsername(token);
        assertEquals(expected, actual);
    }

    @Test
    public void testStripBotUsername_CaseInsensitive() {
        when(botUsername).thenReturn("testBot");
        String token = "@TestBotHello";
        String expected = "Hello";
        String actual = bot.stripBotUsername(token);
        assertEquals(expected, actual);
    }

    @Test
    public void testStripBotUsername_NoUsernameInToken() {
        when(botUsername).thenReturn("testBot");
        String token = "Hello";
        String expected = "Hello";
        String actual = bot.stripBotUsername(token);
        assertEquals(expected, actual);
    }

    @Test
    public void testStripBotUsername_EmptyToken() {
        when(botUsername).thenReturn("testBot");
        String token = "";
        String expected = "";
        String actual = bot.stripBotUsername(token);
        assertEquals(expected, actual);
    }
}
