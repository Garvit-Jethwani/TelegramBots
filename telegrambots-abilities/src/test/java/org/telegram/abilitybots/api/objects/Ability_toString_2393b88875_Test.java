// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.objects;

import com.google.common.base.MoreObjects;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class Ability_toString_2393b88875_Test {
   
    Ability ability;

    @BeforeEach
    public void setUp() {
        ability = Mockito.mock(Ability.class);
        Mockito.when(ability.toString()).thenCallRealMethod();
        Mockito.when(ability.name()).thenReturn("Test");
        Mockito.when(ability.locality()).thenReturn(Locality.ALL);
        Mockito.when(ability.privacy()).thenReturn(Privacy.PUBLIC);
        Mockito.when(ability.argNum()).thenReturn(2);
    }

    @Test
    public void testToString() {
        String expected = MoreObjects.toStringHelper(ability)
            .add("name", "Test")
            .add("locality", Locality.ALL)
            .add("privacy", Privacy.PUBLIC)
            .add("argNum", 2)
            .toString();
        assertEquals(expected, ability.toString());
    }

    @Test
    public void testToStringWithDifferentValues() {
        Mockito.when(ability.name()).thenReturn("Test2");
        Mockito.when(ability.locality()).thenReturn(Locality.USER);
        Mockito.when(ability.privacy()).thenReturn(Privacy.PRIVATE);
        Mockito.when(ability.argNum()).thenReturn(3);
        
        String expected = MoreObjects.toStringHelper(ability)
            .add("name", "Test2")
            .add("locality", Locality.USER)
            .add("privacy", Privacy.PRIVATE)
            .add("argNum", 3)
            .toString();
        assertEquals(expected, ability.toString());
    }
}
