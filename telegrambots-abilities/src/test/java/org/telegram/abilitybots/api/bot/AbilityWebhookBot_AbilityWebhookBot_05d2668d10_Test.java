// Test generated by RoostGPT for test telegramBot using AI Type Open AI and AI Model gpt-4

package org.telegram.abilitybots.api.bot;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.abilitybots.api.db.DBContext;
import org.telegram.abilitybots.api.toggle.DefaultToggle;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class AbilityWebhookBot_AbilityWebhookBot_05d2668d10_Test {

    @Mock
    private DBContext dbContext;

    private AbilityWebhookBot abilityWebhookBot;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testAbilityWebhookBot_Success() {
        when(dbContext.getProperty("botToken")).thenReturn("testBotToken");
        when(dbContext.getProperty("botUsername")).thenReturn("testBotUsername");
        when(dbContext.getProperty("botPath")).thenReturn("testBotPath");

        abilityWebhookBot = new AbilityWebhookBot("testBotToken", "testBotUsername", "testBotPath", dbContext, new DefaultToggle());

        assertEquals("testBotToken", abilityWebhookBot.getBotToken());
        assertEquals("testBotUsername", abilityWebhookBot.getBotUsername());
        assertEquals("testBotPath", abilityWebhookBot.getBotPath());
    }

    @Test
    public void testAbilityWebhookBot_Failure() {
        when(dbContext.getProperty("botToken")).thenReturn("testBotToken");
        when(dbContext.getProperty("botUsername")).thenReturn("testBotUsername");
        when(dbContext.getProperty("botPath")).thenReturn("testBotPath");

        abilityWebhookBot = new AbilityWebhookBot("wrongBotToken", "wrongBotUsername", "wrongBotPath", dbContext, new DefaultToggle());

        assertEquals("testBotToken", abilityWebhookBot.getBotToken());
        assertEquals("testBotUsername", abilityWebhookBot.getBotUsername());
        assertEquals("testBotPath", abilityWebhookBot.getBotPath());
    }
}
